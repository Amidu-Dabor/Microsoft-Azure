name: Remove demo and samba-file-share resource groups

on:
  push:
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_NAME: 'app-func0'   # set this to your function app name on Azure
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'       # set this to the path to your function app project, defaults to the repository root
  PYTHON_VERSION: '3.11'                    # set this to the python version to use (e.g. '3.6', '3.7', '3.8')

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: dev
    permissions:
      id-token: write
      contents: read
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v3

    - name: Setup Python ${{ env.PYTHON_VERSION }} Environment
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Cache Python packages
      uses: actions/cache@v4.0.2
      with:
        path: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/.python_packages
        key: ${{ runner.os }}-python-packages-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-python-packages-

    - name: 'Resolve Project Dependencies Using Pip'
      shell: bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        python -m pip install --upgrade pip
        pip install -r requirements.txt --target=".python_packages/lib/site-packages"
        popd

    - name: 'Installing Azure CLI'
      shell: bash
      run: |
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

    # Login to Azure using OpenID Connect
    - name: 'Azure CLI Login with OIDC'
      uses: azure/login@v2
      with:
       creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
        scm-do-build-during-deployment: true
        enable-oryx-build: true

    - name: 'Get demo and samba-file-share resource groups'
      shell: bash
      run: |
        az group list --query "[?name.contains(@, '.')]" | jq -r '.[] | .name'
    # az group list --query "[?name.contains(@, 'samba-file')]" | jq -r '.[] | .name'